/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    
    public static TreeNode add(TreeNode node, int data) {
		// write your code here
		if (node == null) {
			TreeNode nn = new TreeNode(data, null, null);
			return nn;
		}		
		
		if (data > node.val) {
			node.right = add(node.right, data);
		} else if (data < node.val) {
			node.left = add(node.left, data);
		} else {
			//if equal data simply return
			return node;
		}
		
		return node;
	}
    
    public TreeNode bstFromPreorder(int[] preorder) {
        
        //first element as root
        TreeNode root = new TreeNode(preorder[0]);
        
        //add all other element to bst
        for (int i = 0; i<preorder.length; i++) {
            root = add(root, preorder[i]);
        }
        
        return root;
    }
}