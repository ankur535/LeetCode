class Solution {
    
    //LIS in O(nlogn) using Binary Search
    public int lengthOfLIS(int[] nums) {
        
        int n = nums.length;
        
        ArrayList<Integer> dp = new ArrayList<>();
        
        for (int i = 0; i < n; i++) {
            
            int ele = nums[i];
            
            int pos = binary_search(dp, ele);
            
            if (pos == dp.size()) {
                dp.add(ele);
            } else {
                dp.set(pos, ele);
            }
        }
        
        return dp.size();
    }
    
    //designed such that si will always have the position to update the element
    public int binary_search(ArrayList<Integer> dp, int ele) {
        
        int si = 0;
        int ei = dp.size() - 1;
        
        while (si <= ei) {
            
            int mid = (si + ei)/ 2;
            
            if (dp.get(mid) < ele) {
                si = mid + 1;
            } else {
                ei = mid - 1;
            }
        }
        
        return si;
    }
    
}