class Solution {
    public int lengthOfLIS(int[] nums) {
        
        //Direct doing tabulation
        
        int n = nums.length;
        
        int[] dp = new int[n];
        
        int max = 0;
        
        //move forward in nums array
        for (int i = 0; i < n; i++) {
            
            dp[i] = 1;
            
            //move backward from i-1 till 0 to see where it can be appended and gives longest increasing                   //subsequence
            for (int j = i-1; j >= 0; j--) {
                
                //if get a smaller value, then take max of current or that value
                if (nums[j] < nums[i]) {
                    dp[i] = Math.max(dp[i], dp[j] + 1);
                }
            }
            
            max = Math.max(dp[i], max);
        }
        
        
        /*for (int i = 0; i < n; i++) {
            max = Math.max(dp[i], max);
        }
        */
        
        return max;
    }
}