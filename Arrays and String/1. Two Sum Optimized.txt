

class Solution {
    public int[] twoSum(int[] nums, int target) {

        int n = nums.length;
        int arr[][] = new int[n][2];

        //Filing a 2-D array to store num with its index
        for (int i = 0; i < n; i++) {
            arr[i][0] = nums[i];
            arr[i][1] = i;
        }

        //Sorting element based on num value keeping index with it
        Arrays.sort(arr, (int[] a, int[] b) -> {
            return a[0] - b[0];
        });

        int i = 0;
        int j = n-1;

        //Iterting over sorted 2-D array with 2 pointers to find the pair
        while (i < j) {
            if (arr[i][0] + arr[j][0] < target) {
                i++;
            } else if (arr[i][0] + arr[j][0] > target){
                j--;
            } else {
                break;
            }
        }

        //Returning index of the nums that equals to target
        if (i < j) {
            return new int[]{arr[i][1], arr[j][1]};
        }

        return new int[]{};


    }
}