class Solution {
    public int longestConsecutive(int[] nums) {
        
        int n = nums.length;
        HashSet<Integer> set = new HashSet<>();

		//fill unique values, set store only unique values and ignores duplicates
		for (int i = 0; i < n; i++) {
			int key = nums[i];
			set.add(key);
		}

		//starting point for longest sequencce and length of sequence
		int start = -1;
		int max_len = 0;

		for (Integer key : set) {

			//if set doesn't containt previous number as key
			if (!set.contains(key-1)) {
				
				int count = 1;

				//find length of sequence for that starting point
				while (set.contains(key + count)) {
					count++;
				}

				//if length of sequence is more than previous sequence, replace it
				if (count > max_len) {
					max_len = count;
					start = key;
				}
			}
		}

		return max_len;
    }
}