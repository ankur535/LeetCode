class Solution {
    public int subarraysDivByK(int[] nums, int k) {
        HashMap<Integer, Integer> map = new HashMap<>();
		
		int csum = 0;
		int count = 0;
		
		//initial freq as 1
		map.put(csum, 1);
		
		for (int i = 0; i < nums.length; i++) {
			
			csum += nums[i];
			
			//find remainder
			int rem = csum % k;
            
            if (rem < 0) {
				rem += k;
			}
			
			if (map.containsKey(rem)) {
				//if raminder exist, add is freq to count
				int remCount = map.get(rem);
				count += remCount;
				//update remainder freq by 1
				map.put(rem, remCount + 1);
			} else {
				//new remainder value with freq 1
				map.put(rem, 1);
			}
		}
		
		return count;
    }
}