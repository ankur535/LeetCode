/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        
        ListNode slow = head;
        ListNode fast = head;

        //Find nth node first
        for (int i = 0; i < n; i++) {
            fast = fast.next;
        }

        while (fast != null) {
            slow = slow.next;
            fast = fast.next;
        }

        //Then remove the nth node by comparing it
        ListNode tmp = head;
        while (tmp != slow && tmp.next != slow) {
            tmp = tmp.next;
        }

        if (tmp == slow) {
            ListNode next = tmp.next;
            tmp.next = null;
            head = next;
        } else {
            tmp.next = tmp.next.next;
        }

        return head;
    }
}