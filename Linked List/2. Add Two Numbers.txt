/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        
        //head and tail of the linkedlist
        ListNode head = null;
        ListNode tail = null;

        int carry = 0;
        while (l1 != null || l2 != null) {

            //calculating sum and carry
            int sum = carry;
            if (l1 != null) {
                sum += l1.val;
                l1 = l1.next;
            }

            if (l2 != null) {
                sum += l2.val;
                l2 = l2.next;
            }

            int rem = sum % 10;
            carry = sum / 10;

            //Creating and adding new listnode
            ListNode tmp = new ListNode(rem);

            if (head == null) {
                head = tail = tmp;
            } else {
                tail.next = tmp;
                tail = tmp;
            }
        }

        //if carry, adding new listnode
        if (carry != 0) {
            ListNode tmp = new ListNode(carry);
            tail.next = tmp;
            tail = tmp;
        }

        //head points to start of the list
        return head;
    }
}