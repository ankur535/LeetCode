/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public int getDecimalValue(ListNode head) {
        
        int count = 0;
        ListNode temp = head;

        while (temp != null) {
            count++;
            temp = temp.next;
        }

        int sum = 0;
        temp = head;

        while (temp != null) {

            if (temp.val == 1) {
                sum += Math.pow(2, count-1);
            }
            count -= 1;
            temp = temp.next;
        }   

        return sum;

    }
}


class Solution {
    public int getDecimalValue(ListNode head) {
        
        int num = 0;

        ListNode temp = head;

        while (temp != null) {

            //Previous value from left will get doubled and new value on right has
            //only 2 choice either 0 or 1 (because of 2^0)
            num = (num * 2) + temp.val;
            temp = temp.next;
        }

        return num;
    }
}

