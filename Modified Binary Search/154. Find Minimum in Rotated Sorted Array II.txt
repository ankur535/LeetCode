class Solution {
    public int findMin(int[] nums) {
        
        //Using modified binary search
        int left = 0;
        int right = nums.length - 1;

        while (left < right) {
            int mid = left + (right - left) / 2;

            if (nums[mid] > nums[right]) {
                // If nums[mid] > nums[right], pivot is in the right half
                left = mid + 1;
            } else if (nums[mid] < nums[right]) {
                // If nums[mid] < nums[right], pivot is in the left half or mid is the pivot
                right = mid;
            } else {
                // Handle duplicates by reducing the search space
                right--;
            }
        }

        // The final value of 'left' will be the index of the minimum element
        return nums[left];
    }
}